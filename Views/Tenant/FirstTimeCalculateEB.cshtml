@model RentAutomation.Models.Tenant

@{
    ViewData["Title"] = "First Time Calculate EB";
}

<h1>First Time EB Calculation</h1>

<!-- Validation Summary to show server-side errors -->
@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger">
        @Html.ValidationSummary()
    </div>
}

<form id="ebCalculationForm" asp-action="CalculateEB" method="post">
    <input type="hidden" name="id" value="@Model.Id" />

    <div class="form-group">
        <label for="currentMonthUnit">Current Month Reading</label>
        <input type="number" id="currentMonthUnit" name="currentMonthUnit" class="form-control" required />
    </div>

    <div class="form-group">
        <label for="previousMonthUnit">Previous Month Reading</label>
        <input type="number" id="previousMonthUnit" name="previousMonthUnit" class="form-control" required />
    </div>

    <button type="submit" class="btn btn-primary">Calculate</button>
</form>

<script>
    document.getElementById("ebCalculationForm").onsubmit = function (event) {
        const currentMonthUnit = parseFloat(document.getElementById("currentMonthUnit").value);
        const previousMonthUnit = parseFloat(document.getElementById("previousMonthUnit").value);

        if (previousMonthUnit > currentMonthUnit) {
            alert("Previous month reading must be less than or equal to the current month reading.");
            event.preventDefault(); // Prevent form submission
        }
    };
</script>
